rm(list = ls())
# Load Packages
library(readxl)
smarket <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/smarket.xlsx")
# set the seed
set.seed(300)
# Split data randomly
Numbers <- sample(1250,1250*0.7)
Training <- smarket[Numbers,]
Test <- smarket[-Numbers,]
# Logistic regression model
Logit <- glm(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume, family = binomial(link = logit), data = Training)
summary(Logit)
# Probit regression model
Probit <- glm(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume, family = binomial(link = probit), data = Training)
summary(Probit)
# Prediction
# Logistic regression model
prob.logit <- predict(Logit, Test, type = "response")
Predicted.logit <- ifelse(prob.logit>0.5, 1, 0)
# Compute test error rate for logistic regression model
table (Test$Direction, Predicted.logit)
1 - mean(Test$Direction != Predicted.logit)
# Probit regression model
prob.probit <- predict(Probit, Test, type = "response")
Predicted.probit <- ifelse(prob.probit>0.5, 1, 0)
# Compute test error rate for probit regression model
table (Test$Direction, Predicted.probit)
1 - mean(Test$Direction != Predicted.probit)
rm(list = ls())
# Load Packages
library(readxl)
smarket <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/smarket.xlsx")
# set the seed
set.seed(400)
# Split data randomly
Numbers <- sample(1250,1250*0.7)
Training <- smarket[Numbers,]
Test <- smarket[-Numbers,]
# Logistic regression model
Logit <- glm(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume, family = binomial(link = logit), data = Training)
summary(Logit)
# Probit regression model
Probit <- glm(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume, family = binomial(link = probit), data = Training)
summary(Probit)
# Prediction
# Logistic regression model
prob.logit <- predict(Logit, Test, type = "response")
Predicted.logit <- ifelse(prob.logit>0.5, 1, 0)
# Compute test error rate for logistic regression model
table (Test$Direction, Predicted.logit)
1 - mean(Test$Direction != Predicted.logit)
# Probit regression model
prob.probit <- predict(Probit, Test, type = "response")
Predicted.probit <- ifelse(prob.probit>0.5, 1, 0)
# Compute test error rate for probit regression model
table (Test$Direction, Predicted.probit)
1 - mean(Test$Direction != Predicted.probit)
rm(list = ls())
# Load Packages
library(readxl)
smarket <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/smarket.xlsx")
# set the seed
set.seed(300)
# Split data randomly
Numbers <- sample(1250,1250*0.7)
Training <- smarket[Numbers,]
Test <- smarket[-Numbers,]
# Logistic regression model
Logit <- glm(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume, family = binomial(link = logit), data = Training)
summary(Logit)
# Probit regression model
Probit <- glm(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume, family = binomial(link = probit), data = Training)
summary(Probit)
# Prediction
# Logistic regression model
prob.logit <- predict(Logit, Test, type = "response")
Predicted.logit <- ifelse(prob.logit>0.5, 1, 0)
# Compute test error rate for logistic regression model
table (Test$Direction, Predicted.logit)
1 - mean(Test$Direction != Predicted.logit)
# Probit regression model
prob.probit <- predict(Probit, Test, type = "response")
Predicted.probit <- ifelse(prob.probit>0.5, 1, 0)
# Compute test error rate for probit regression model
table (Test$Direction, Predicted.probit)
1 - mean(Test$Direction != Predicted.probit)
rm(list = ls())
# Load Packages
library(readxl)
smarket <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/smarket.xlsx")
# set the seed
set.seed(400)
# Split data randomly
Numbers <- sample(1250,1250*0.7)
Training <- smarket[Numbers,]
Test <- smarket[-Numbers,]
# Logistic regression model
Logit <- glm(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume, family = binomial(link = logit), data = Training)
summary(Logit)
# Probit regression model
Probit <- glm(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume, family = binomial(link = probit), data = Training)
summary(Probit)
# Prediction
# Logistic regression model
prob.logit <- predict(Logit, Test, type = "response")
Predicted.logit <- ifelse(prob.logit>0.5, 1, 0)
# Compute test error rate for logistic regression model
table (Test$Direction, Predicted.logit)
1 - mean(Test$Direction != Predicted.logit)
# Probit regression model
prob.probit <- predict(Probit, Test, type = "response")
Predicted.probit <- ifelse(prob.probit>0.5, 1, 0)
# Compute test error rate for probit regression model
table (Test$Direction, Predicted.probit)
1 - mean(Test$Direction != Predicted.probit)
rm(list = ls())
# Load Packages
library(readxl)
smarket <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/smarket.xlsx")
# set the seed
set.seed(500)
# Split data randomly
Numbers <- sample(1250,1250*0.7)
Training <- smarket[Numbers,]
Test <- smarket[-Numbers,]
# Logistic regression model
Logit <- glm(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume, family = binomial(link = logit), data = Training)
summary(Logit)
# Probit regression model
Probit <- glm(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume, family = binomial(link = probit), data = Training)
summary(Probit)
# Prediction
# Logistic regression model
prob.logit <- predict(Logit, Test, type = "response")
Predicted.logit <- ifelse(prob.logit>0.5, 1, 0)
# Compute test error rate for logistic regression model
table (Test$Direction, Predicted.logit)
1 - mean(Test$Direction != Predicted.logit)
# Probit regression model
prob.probit <- predict(Probit, Test, type = "response")
Predicted.probit <- ifelse(prob.probit>0.5, 1, 0)
# Compute test error rate for probit regression model
table (Test$Direction, Predicted.probit)
1 - mean(Test$Direction != Predicted.probit)
rm(list = ls())
# Load Packages
library(readxl)
# Impoet Sample Data
Default <- read.excel('/Users/udoychowdhury/Desktop/Predictive Analytics/Default.xlsx')
rm(list = ls())
# Load Packages
library(readxl)
# Impoet Sample Data
Default <- read_excel('/Users/udoychowdhury/Desktop/Predictive Analytics/Default.xlsx')
rm(list = ls())
# Load Packages
library(readxl)
# Impoet Sample Data
Default <- read_excel('/Users/udoychowdhury/Desktop/Predictive Analytics/Default.xlsx')
set.seed(200)
Random.no <- sample(10000,10000*0.7)
rm(list = ls())
# Load Packages
library(readxl)
# Impoet Sample Data
Default <- read_excel('/Users/udoychowdhury/Desktop/Predictive Analytics/Default.xlsx')
set.seed(200)
Random.no <- sample(10000,10000*0.7)
Training <- Default[Random.no,]
Test <- Default[-Random.no,]
rm(list = ls())
# Load Packages
library(readxl)
# Impoet Sample Data
Default <- read_excel('/Users/udoychowdhury/Desktop/Predictive Analytics/Default.xlsx')
set.seed(200)
Random.no <- sample(10000,10000*0.7)
Training <- Default[Random.no,]
Test <- Default[-Random.no,]
lda.fit <- lda(default ~ student + balance + income, data = Training)
rm(list = ls())
# Load Packages
library(readxl)
# Impoet Sample Data
Default <- read_excel('/Users/udoychowdhury/Desktop/Predictive Analytics/Default.xlsx')
set.seed(200)
Random.no <- sample(10000,10000*0.7)
Training <- Default[Random.no,]
Test <- Default[-Random.no,]
lda.fit <- lda.fit(default ~ student + balance + income, data = Training)
install.packages("MASS")
rm(list = ls())
# Load Packages
library(readxl)
library(MASS)
# Impoet Sample Data
Default <- read_excel('/Users/udoychowdhury/Desktop/Predictive Analytics/Default.xlsx')
set.seed(200)
Random.no <- sample(10000,10000*0.7)
Training <- Default[Random.no,]
Test <- Default[-Random.no,]
lda.fit <- lda(default ~ student + balance + income, data = Training)
lda.fit
prob.lda <- predict(lda.fit, Test, type = "response")
rm(list = ls())
# Load Packages
library(readxl)
library(MASS)
# Impoet Sample Data
Default <- read_excel('/Users/udoychowdhury/Desktop/Predictive Analytics/Default.xlsx')
set.seed(200)
Random.no <- sample(10000,10000*0.7)
Training <- Default[Random.no,]
Test <- Default[-Random.no,]
lda.fit <- lda(default ~ student + balance + income, data = Training)
lda.fit
#Prediction
prob.lda <- predict(lda.fit, Test, type = "response")
Predicted.lda <- ifelse(prob.lda$posterior[,2] > 0.5, 1, 0)
Predicted.lda
table(Test$default, Predicted.lda)
2882+25/2882
2882/2882+25
2882+25/3000
(2882+25)/3000
1 - mean(Test$default!=Predicted.lda)
rm(list = ls())
# Load Packages
library(readxl)
library(MASS)
# Impoet Sample Data
Default <- read_excel('/Users/udoychowdhury/Desktop/Predictive Analytics/Default.xlsx')
set.seed(200)
Random.no <- sample(10000,10000*0.7)
Training <- Default[Random.no,]
Test <- Default[-Random.no,]
lda.fit <- lda(default ~ student + balance + income, data = Training)
lda.fit
#Prediction
prob.lda <- predict(lda.fit, Test, type = "response")
Predicted.lda <- ifelse(prob.lda$posterior[,2] > 0.5, 1, 0)
# Test Error Rate
table(Test$default, Predicted.lda)
1 - mean(Test$default!=Predicted.lda)
(2882+25)/3000
lda.fit
Predicted.lda
SampleData <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx")
# Case Study 1 (Boston Data Set)
# Remove all the variables
rm(list = ls())
# Load packages
library(readxl)
# Import sample data
SampleData <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx")
# Case Study 1 (Boston Data Set)
# Remove all the variables
rm(list = ls())
# Load packages
library(readxl)
# Import sample data
SampleData <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx")
Training <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx","Training")
Test <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx","Test")
# Case Study 1 (Boston Data Set)
# Remove all the variables
rm(list = ls())
# Load packages
library(readxl)
# Import sample data
SampleData <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx")
Training <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx","Training")
Test <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx","Test")
# Case Study 1 (Boston Data Set)
# Remove all the variables
rm(list = ls())
# Load packages
library(readxl)
# Import sample data
SampleData <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx")
Training <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx","Training")
Test <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx","Test")
# Case Study 1 (Boston Data Set)
# Remove all the variables
rm(list = ls())
# Load packages
library(readxl)
# Import sample data
SampleData <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx")
Training <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx","Training")
Test <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx","Test")
set.seed(100)
# Summary Statsitic
summary(SampleData)
# Training
# Simple Linear Regression Model 1
Model1 <- lm(GDP ~ Mortality, data = Training)
summary(Model1)
# Test
# Simple Linear Regression Model 1
Model1 <- lm(GDP ~ Mortality, data = Test)
summary(Model1)
# Simple Linerar Regression Model 2
Model2 <- lm(GDP ~ Pop, data = Training)
summary(Model2)
# Case Study 1 (Boston Data Set)
# Remove all the variables
rm(list = ls())
# Load packages
library(readxl)
# Import sample data
SampleData <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx")
Training <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx","Training")
Test <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx","Test")
# Simple Linerar Regression Model 2
Model2 <- lm(GDP ~ Pop, data = Training)
summary(Model2)
# Simple Linear Regression Model 3
Model3 <- lm(GDP ~ Urban_Pop, data = Training)
summary(Model3)
4
Model4 <- lm(GDP ~ Rail_Pass + Car_Pass, data = Training)
summary(Model4)
# Multiple Linear Regression Model 5
Model5 <- lm(GDP ~ Mobile_Phpne_Sub + Internet_Users + DIS, data = Training)
summary(Model5)
ession Model 5
Model5 <- lm(GDP ~ Mobile_Phone_Sub + Internet_Users + DIS, data = Training)
summary(Model5)
# Multiple Linear Regression Model 5
Model5 <- lm(GDP ~ Mobile_Phone_Sub + Internet_Users, data = Training)
summary(Model5)
# Project (GDP Data Set)
# Remove all the variables
rm(list = ls())
# Load packages
library(readxl)
# Import sample data
SampleData <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx")
Training <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx","Training")
Test <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx","Test")
set.seed(100)
# Summary Statsitic
summary(SampleData)
# Training
# Simple Linear Regression Model 1
Model1 <- lm(GDP ~ Mortality, data = Training)
summary(Model1)
# Simple Linerar Regression Model 2
Model2 <- lm(GDP ~ Pop, data = Training)
summary(Model2)
# Simple Linear Regression Model 3
Model3 <- lm(GDP ~ Urban_Pop, data = Training)
summary(Model3)
# Multiple Linear Regression Model 4
Model4 <- lm(GDP ~ Rail_Pass + Car_Pass, data = Training)
summary(Model4)
# Multiple Linear Regression Model 5
Model5 <- lm(GDP ~ Mobile_Phone_Sub + Internet_Users, data = Training)
summary(Model5)
# Test
# Simple Linear Regression Model 1
Model1 <- lm(GDP ~ Mortality, data = Test)
summary(Model1)
# Simple Linerar Regression Model 2
Model2 <- lm(GDP ~ Pop, data = Test)
summary(Model2)
# Simple Linear Regression Model 3
Model3 <- lm(GDP ~ Urban_Pop, data = Test)
summary(Model3)
# Multiple Linear Regression Model 4
Model4 <- lm(GDP ~ Rail_Pass + Car_Pass, data = Test)
summary(Model4)
# Multiple Linear Regression Model 5
Model5 <- lm(GDP ~ Mobile_Phone_Sub + Internet_Users, data = Test)
summary(Model5)
Model1 <- lm(MEDV ~ CRIM, data = Training)
summary(Model1)
# Simple linear regression model
Model1 <- lm(MEDV ~ RM, data = Training)
summary(Model1)
# Simple linear regression model
Model1 <- lm(MEDV ~ RM, data = Training)
summary(Model1)
# Simple linear regression model
Model1 <- lm(MEDV ~ RM, data = Training)
summary(Model1)
# Simple linear regression model
Model1 <- lm(MEDV ~ RM, data = Training)
summary(Model1)
# Simple linear regression model
Model1 <- lm(MEDV ~ RM, data = Training)
summary(Model1)
# Simple linear regression model
Model1 <- lm(MEDV ~ RM, data = Training)
summary(Model1)
# Case Study 1 (Boston Dataset)
# Remove all the variables
rm(list = ls())
# Load packages
library(readxl)
# Import sample data
SampleData <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/Boston - MSE | Udoy.xlsx")
Training <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/Boston - MSE | Udoy.xlsx","Training")
Test <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/Boston - MSE | Udoy.xlsx","Test")
# Summary statistics
summary(SampleData)
# Simple linear regression model
Model1 <- lm(MEDV ~ RM, data = Training)
summary(Model1)
# Simple linear regression model
Model1 <- lm(MEDV ~ RM, data = Training)
summary(Model1)
# Case Study 1 (Boston Dataset)
# Remove all the variables
rm(list = ls())
# Load packages
library(readxl)
# Import sample data
SampleData <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/Boston - MSE | Udoy.xlsx")
Training <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/Boston - MSE | Udoy.xlsx","Training")
Test <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/Boston - MSE | Udoy.xlsx","Test")
gression model
Model1 <- lm(MEDV ~ RM, data = Training)
summary(Model1)
# Project (GDP Data Set)
# Remove all the variables
rm(list = ls())
# Load packages
library(readxl)
# Import sample data
SampleData <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx")
Training <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx","Training")
Test <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx","Test")
set.seed(100)
# Summary Statsitic
summary(SampleData)
# Training
# Simple Linear Regression Model 1
Model1 <- lm(GDP ~ Mortality, data = Training)
summary(Model1)
# Simple Linerar Regression Model 2
Model2 <- lm(GDP ~ Pop, data = Training)
summary(Model2)
# Simple Linear Regression Model 3
Model3 <- lm(GDP ~ Urban_Pop, data = Training)
summary(Model3)
# Multiple Linear Regression Model 4
Model4 <- lm(GDP ~ Rail_Pass + Car_Pass, data = Training)
summary(Model4)
# Multiple Linear Regression Model 5
Model5 <- lm(GDP ~ Mobile_Phone_Sub + Internet_Users, data = Training)
summary(Model5)
# Test
# Simple Linear Regression Model 1
Model1 <- lm(GDP ~ Mortality, data = Test)
summary(Model1)
# Simple Linerar Regression Model 2
Model2 <- lm(GDP ~ Pop, data = Test)
summary(Model2)
# Simple Linear Regression Model 3
Model3 <- lm(GDP ~ Urban_Pop, data = Test)
summary(Model3)
# Multiple Linear Regression Model 4
Model4 <- lm(GDP ~ Rail_Pass + Car_Pass, data = Test)
summary(Model4)
# Multiple Linear Regression Model 5
Model5 <- lm(GDP ~ Mobile_Phone_Sub + Internet_Users, data = Test)
summary(Model5)
summary(SampleData)
# Simple Linear Regression Model 1
Model1 <- lm(GDP ~ Mortality, data = Training)
summary(Model1)
Model2 <- lm(GDP ~ Pop, data = Training)
summary(Model2)
Model3 <- lm(GDP ~ Urban_Pop, data = Training)
summary(Model3)
Model4 <- lm(GDP ~ Rail_Pass + Car_Pass, data = Training)
summary(Model4)
Model5 <- lm(GDP ~ Mobile_Phone_Sub + Internet_Users, data = Training)
summary(Model5)
Model1 <- lm(GDP ~ Mortality, data = Test)
summary(Model1)
Model2 <- lm(GDP ~ Pop, data = Test)
summary(Model2)
Model3 <- lm(GDP ~ Urban_Pop, data = Test)
summary(Model3)
Model4 <- lm(GDP ~ Rail_Pass + Car_Pass, data = Test)
summary(Model4)
Model5 <- lm(GDP ~ Mobile_Phone_Sub + Internet_Users, data = Test)
summary(Model5)
# Project (GDP Data Set)
# Remove all the variables
rm(list = ls())
# Load packages
library(readxl)
# Import sample data
SampleData <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx")
Training <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx","Training")
Test <- read_excel("/Users/udoychowdhury/Desktop/Predictive Analytics/GDP.xlsx","Test")
set.seed(100)
# Summary Statsitic
summary(SampleData)
Model1 <- lm(GDP ~ Mortality, data = Training)
summary(Model1)
Model2 <- lm(GDP ~ Pop, data = Training)
summary(Model2)
install.packages("tidyverse")
install.packages("shiny")
setwd("/Users/udoychowdhury/Documents/Assignment3")
library(shiny); runApp('Assignment 3 - Udoy Chowdhury.R')
